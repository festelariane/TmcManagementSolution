@model ChangePasswordModel
@using Tmc.Web.Models.Customers;
@using System.Web.Mvc.Html;
@{
    ViewBag.Title = "Change Password";
}

<div class="main-content">

    @using (Html.BeginForm())
    {
        if(Model.Success)
        {
            <p>
                Your new password has been changed successfully. <a href="@Url.RouteUrl("HomePage")">Back to HomePage</a> 
            </p>
        }
        else
        {
            <div class="login-block">
            <div class="inputs">
                @Html.LabelFor(model => model.OldPassword)
                @Html.PasswordFor(m => m.OldPassword, new { @class = "password", autofocus = "autofocus" })
                @Html.ValidationMessageFor(m => m.OldPassword)
            </div>
            <div class="inputs">
                @Html.LabelFor(model => model.NewPassword)
                @Html.PasswordFor(m => m.NewPassword, new { @class = "password" })
                @Html.ValidationMessageFor(m => m.NewPassword)
            </div>

            <div class="inputs">
                @Html.LabelFor(model => model.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
            <div class="buttons">
                <input class="login-button" type="submit" value="Change Password" />
            </div>
            @if (Model.ErrorMessage != null && Model.ErrorMessage.Count > 0)
            {
                <div class="message-error">
                    @foreach(var message in Model.ErrorMessage)
                    {
                        <span>@message</span><br/>
                    }
                </div>
            }
            
        </div>
        }
        
    }
</div>